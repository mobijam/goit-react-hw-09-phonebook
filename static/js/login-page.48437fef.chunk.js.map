{"version":3,"sources":["views/LoginView.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/UI/Input/index.jsx","components/UI/Input/Input.module.css","components/UI/Button/index.jsx","components/UI/Button/Button.module.css","views/Auth.module.css"],"names":["LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","event","target","name","value","toast","error","className","s","formWrapper","title","form","onSubmit","preventDefault","authOperations","login","label","placeholder","autoComplete","onChange","type","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","Input","restProps","inputField","input","inputLabel","defaultProps","module","exports","Button","classList","button","join"],"mappings":"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","file":"static/js/login-page.48437fef.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { authOperations } from '../redux/auth';\r\nimport Input from '../components/UI/Input';\r\nimport Button from '../components/UI/Button';\r\n\r\nimport s from './Auth.module.css';\r\nimport '../styles/animations/NoticeAppear.css';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [ email, setEmail ] = useState('');\r\n  const [ password, setPassword ] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        toast.error(`The type of field name - ${name} is not processed`)\r\n    };\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(authOperations.login({email, password}))\r\n\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n      <div className={s.formWrapper}>\r\n        <h2 className={s.title}>Login</h2>\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n            <Input\r\n                label=\"E-mail\"\r\n                name=\"email\"\r\n                value={email}\r\n                placeholder=\" \"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n            />\r\n            <Input\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                placeholder=\" \"\r\n                autoComplete=\"new-password\"\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n            />\r\n            <Button type=\"submit\" title=\"LogIn\" />\r\n        </form>\r\n      </div>\r\n    );\r\n};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Input.module.css';\r\n\r\nconst Input = ({ type, name, label, className, ...restProps }) => {\r\n\r\n    return (\r\n        <label className={s.inputField}>\r\n          <input\r\n            className={s.input}\r\n            type={type}\r\n            name={name}\r\n            {...restProps}\r\n          />\r\n          <span className={s.inputLabel}>{label}</span>\r\n        </label>\r\n    );\r\n};\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  name: null,\r\n  label: '',\r\n  className: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Input_inputField__2fnzB\",\"inputLabel\":\"Input_inputLabel__28KZS\",\"input\":\"Input_input__1x0wc\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ type, title, className, ...restProps }) => {\r\n    const classList = [s.button, className].join(' ');\r\n    return (\r\n        <button\r\n            className={classList}\r\n            type={type}\r\n            {...restProps}\r\n        >\r\n            {title}\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  title: 'button'\r\n};\r\n\r\nButton.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../../styles/variables/colors.css'\",\"bgColor\":\"#370617\",\"accentColor\":\"#34a0a4\",\"activeBtnColor\":\"#B4B8C5\",\"button\":\"Button_button__1pVuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Auth_formWrapper__STCC8\",\"form\":\"Auth_form__yD6pA\",\"title\":\"Auth_title__17KnP\",\"container\":\"Auth_container__3SG6o\"};"],"sourceRoot":""}